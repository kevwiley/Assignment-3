A stack is the right choice for undo/redo do because there are more options available for it to use. Creating an undo option stores your last input and undoes it, while redo stores your last undo, and redoes it. Stacks use last in first out, which is the exact kind of logic that is helpful with undoing and redoing inputs. They are helpful when you need to recover or remove the more recent actions in a program. A queue on the other hand has a first in first out system. In a queue, the first person who was waiting is the first person who is attended to. This is also how help desk tickets work, with the tickets generally being resolved in the order that they came in. This is why queues are an ideal method for storing things such as help desk entries. My stack and queue implementations are different from using a python list in that they require a bit more to get started and change, but they can be used in different ways. My stack and queue implementations allowed the stacks and queues to exist as frameworks without having to constantly add and take away from a list.